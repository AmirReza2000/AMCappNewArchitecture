@page "/"
@using Blazored.Toast.Configuration
@using Blazored.Toast.Services
@inject NavigationManager NavigationManager
@inject IJSRuntime JSRuntime
<PageTitle>Home</PageTitle>
@inject IToastService ToastService

<h1>Hello, world!</h1>

<h1>Blazored Toasts</h1>

<button class="btn btn-info" id="InfoButton" @onclick="@(() => ToastService.ShowInfo("سلام", settings => settings.IconType = IconType.None))">Info Toast</button>
<button class="btn btn-info" @onclick="@(() => ToastService.ShowInfo("سلام", settings => { settings.IconType = IconType.None; settings.DisableTimeout = true; }))">Info Toast without timeout</button>
<button class="btn btn-success" id="SuccessButton" @onclick="@(() => ToastService.ShowSuccess("I'm a SUCCESS message with a lot of text to see what a toast looks like when it's really big."))">Success Toast</button>
<button class="btn btn-warning" @onclick="@(() => ToastService.ShowWarning("I'm a WARNING message"))">Warning Toast</button>
<button class="btn btn-danger" @onclick="@(() => ToastService.ShowError("سلام"))">Error Toast</button>
@* <button class="btn btn-info" @onclick="@OnShowHtml">test</button> *@
<button class="btn btn-info" @onclick="@(error)">
    error
</button>
<div class="mt-2">
    <button class="btn btn-info" @onclick="@(() => ToastService.ShowInfo("When you hover over me, I will pause the timeout progress and resume it once you move away", settings => {settings.Timeout = 15; settings.PauseProgressOnHover = true; }))">Pause progress on hover</button>
    <button class="btn btn-success" @onclick="@(() => ToastService.ShowSuccess("When you hover over me, I will stop the timeout progress and close after an extended timeout of 1 second", settings => {settings.Timeout = 15; settings.PauseProgressOnHover = true; settings.ExtendedTimeout = 1;}))">Pause progress on hover with extended timeout</button>
    <button type="button" class="btn btn-outline-light" data-bs-toggle="modal" data-bs-target="#Test">Sign In</button>

</div>
<hr />
<button class="btn btn-primary">Open Dialog</button>

@* <ModalDialog @ref="@ModalDialog" Title="Hello World">
    <div class="row">
        <h3>Lorem Ipsum</h3>
        <hr>
        <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc vel ultricies sapien. Duis nec nunc erat. Vivamus eget sem tristique, lacinia mi id, cursus eros.</p>
        <button class="btn btn-primary" @onclick="() => ModalDialog.Close()">Close</button>
    </div>
</ModalDialog> *@
<Test />
@code {
    protected override void OnInitialized()
    {
        // ModalDialog = new();
        base.OnInitialized();
    }
    // private ModalDialog ModalDialog { get; set; }
    // private async Task OnShowHtml()
    // {
    //     ModalDialog.Open();
    // }
    public void error()
    {
        throw new Exception();
    }

}